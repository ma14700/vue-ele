1：出现第一个问题，路由问题，因为这个项目一级路由在index里面，二级路由在app.vue里面，而main.js 挂载的是一级路由，所以在router里面写入的话，应该是children

2：解决第二个问题，开发环境下代理proxyTable；
如果是在同一url下，直接把api付给api
pathRewrite: {'^/api': 'api'}

那如果没有api呢，直接指向，用api代替；以下代码
proxyTable: {
      '/api': {
        target: 'http://cangdu.org:8001',
        changeOrigin: true,
        pathRewrite: {
          '^/api': ''
        }
      }
    },
接口从v1/city 改为api/v1/city；
在之前项目中
proxyTable: {
    '/api': {
        target: 'http://yqq.mhalo.com/api',
        changeOrigin: true,
        pathRewrite: {
            '^/api': ''
        }
    }
},
其实也可以
proxyTable: {
    '/api': {
        target: 'http://yqq.mhalo.com',
        changeOrigin: true,
        pathRewrite: {
            '^/api': 'api'
        }
    }
},

pathRewrite代表重定向位置；
target代表要指向代理的位置


3：v-for中 key的作用
介绍key的作用不得不说 虚拟dom的diff算法
vue和react 是虚拟dom，使我们不直接操作dom元素，只操作数据

diff算法
1：两个相同的组件产生类似的dom结构，不同的组件产生不同的dom
2：同一层级的一组节点，可以通过唯一id区分
这样降低diff算法复杂度
如果节点类型不同，干掉前面的节点，再创建插入新的节点
节点相同，重置节点属性，更新

所以key的作用是高效更新虚拟dom，使用key去分辨元素

4:v-model.lazy 只有在input输入框发生一个blur时才触发
v-model.trim 将用户输入的前后的空格去掉
v-model.number 将用户输入的字符串转换成number

CSS justify-content 属性

flex 布局

5：router
router.push(loaction) 
window.history.pushState
跳转到不同的url 向histroy中添加一个新的记录，在用户后退的时候回退回

router.replace(loaction)
window.history.replaceState
不添加记录

router.go(n)
window.history.go 
前进n步或作后退n步，历史记录不够会失败

false || true
true
false && true
false
|| 或 && 和

6:登录流程
在这个项目里面：登录如下
进入时head组件 使用vuex的action里面方法getUserInfo 调用接口，通过与mutation中的方法对比，判断是否登录过；

跳转登录页面，如果没有登录过，接口accountLogin 回调，存入localStory，使用vuex中RECORD_USERINFO。

在之前做的微信登录，通过main.js中vuex判断是否登录
router.beforeEach((to, from, next)；
跳入登录授权页面

7；export default 和 export 区别：
1.export与export default均可用于导出常量、函数、文件、模块等
2.你可以在其它文件或模块中通过import+(常量 | 函数 | 文件 | 模块)名的方式，将其导入，以便能够对其进行使用
3.在一个文件或模块中，export、import可以有多个，export default仅有一个
4.通过export方式导出，在导入时要加{ }，export default则不需要

作者：开车去环游世界
链接：https://www.jianshu.com/p/edaf43e9384f
來源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
